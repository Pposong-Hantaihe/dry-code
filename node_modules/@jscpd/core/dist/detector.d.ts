import { IClone, ICloneValidator, IMapFrame, IOptions, IStore, ITokenizer } from './interfaces';
import * as EventEmitter from 'eventemitter3';
export declare type DetectorEvents = 'CLONE_FOUND' | 'CLONE_SKIPPED' | 'START_DETECTION';
export declare class Detector extends EventEmitter<DetectorEvents> {
    private readonly tokenizer;
    private readonly store;
    private readonly cloneValidators;
    private readonly options;
    private algorithm;
    constructor(tokenizer: ITokenizer, store: IStore<IMapFrame>, cloneValidators: ICloneValidator[], options: IOptions);
    detect(id: string, text: string, format: string): Promise<IClone[]>;
    private initCloneValidators;
}
