"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@jscpd/core");
const path_1 = require("path");
class SkipLocalValidator {
    validate(clone, options) {
        const status = !this.shouldSkipClone(clone, options);
        return {
            status,
            clone,
            message: [
                `Sources of duplication located in same local folder (${clone.duplicationA.sourceId}, ${clone.duplicationB.sourceId})`
            ]
        };
    }
    shouldSkipClone(clone, options) {
        const path = core_1.getOption('path', options);
        return path.some((dir) => SkipLocalValidator.isRelative(clone.duplicationA.sourceId, dir) && SkipLocalValidator.isRelative(clone.duplicationB.sourceId, dir));
    }
    static isRelative(file, path) {
        const rel = path_1.relative(path, file);
        return rel !== '' && !rel.startsWith('..') && !path_1.isAbsolute(rel);
    }
}
exports.SkipLocalValidator = SkipLocalValidator;
//# sourceMappingURL=skip-local.validator.js.map